#ifndef __GLCD_H
#define __GLCD_H
/************************************************************************************
*文件名  ：glcd.h																	                                  *
*文件作用：lcd驱动头文件													                                    *
*作者    ：农晓明																	                                  *
*作者QQ  ：382421307																                                  *
*文件创建时间：2013/05/9			  												                              *	
*************************************************************************************/
#include "imapx200.h"
#include "string.h"
#include "uart.h"
#include "fonts.h"
#define FRAME_BUFFER   0x44000000

#define RED	  0XFF0000
#define GREEN 0X00FF00
#define BLUE  0X0000FF 
#define BRED  0XFF00FF
#define GRED  0XFFFF00
#define GBLUE 0X00FFFF
#define BLACK 0X000000
#define WHITE 0XFFFFFF
#define ABS(X)  ((X) > 0 ? (X) : -(X))


/**************************************************************************************************************
 * 函数名：glcd_init()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD初始化函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_init(void );
/**************************************************************************************************************
 * 函数名：backlight_enable()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD背光使能
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void backlight_enable(void);
/**************************************************************************************************************
 * 函数名：backlight_disable()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD背光失能函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void backlight_disable(void);
/**************************************************************************************************************
 * 函数名：lcd_power_on()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD电源使能
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void lcd_power_on(void);
/**************************************************************************************************************
 * 函数名：lcd_power_off()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD电源关闭
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void lcd_power_off(void);
/**************************************************************************************************************
 * 函数名：glcd_display_on()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD开启显示
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_display_on(void);
/**************************************************************************************************************
 * 函数名：glcd_display_off()
 * 输入  ：void
 * 输出  ：void
 * 描述  ：LCD关闭显示
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_display_off(void);
/**************************************************************************************************************
 * 函数名：glcd_clear()
 * 输入  ：uint32_t color 刷屏颜色
 * 输出  ：void
 * 描述  ：LCD清屏函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_clear(uint32_t color);
/**************************************************************************************************************
 * 函数名：glcd_set_cursor()
 * 输入  ：uint16_t x, uint16_t y 设定的屏幕的X值和Y值
 * 输出  ：void
 * 描述  ：LCD设置光标位置函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_cursor(uint16_t x, uint16_t y);
/**************************************************************************************************************
 * 函数名：glcd_set_window()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint8_t Height, uint16_t Width 区域的起点，宽和高
 * 输出  ：void
 * 描述  ：设置某个特定的填充区域
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_window(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint8_t Height);
/**************************************************************************************************************
 * 函数名：glcd_set_colors()
 * 输入  ：_TextColor 前景色,_BackColor 背景色
 * 输出  ：void
 * 描述  ：设置LCD的前景色和背景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_colors(uint32_t _TextColor,uint32_t _BackColor);
/**************************************************************************************************************
 * 函数名：glcd_get_colors()
 * 输入  ：*_TextColor 前景色的指针,*_BackColor 背景色的指针
 * 输出  ：void
 * 描述  ：获取LCD的前景色和背景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_get_colors(uint32_t *_TextColor,uint32_t *_BackColor);
/**************************************************************************************************************
 * 函数名：glcd_set_textcolor()
 * 输入  ：uint16_t Color 前景色
 * 输出  ：void
 * 描述  ：设置LCD的前景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_textcolor(uint32_t Color);
/**************************************************************************************************************
 * 函数名：glcd_set_backcolor()
 * 输入  ：uint16_t Color 背景色
 * 输出  ：void
 * 描述  ：设置LCD的背景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_backcolor(uint32_t Color);
/**************************************************************************************************************
 * 函数名：glcd_set_font()
 * 输入  ：sFONT *fonts 要设置的字体
 * 输出  ：void
 * 描述  ：设置LCD的字体
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_set_font(sFONT *fonts);
/**************************************************************************************************************
 * 函数名：glcd_get_font()
 * 输入  ：void
 * 输出  ：sFONT * 获取字体
 * 描述  ：设置LCD的字体
 * 调用  ：外部调用        
 *****************************************************************************************************************/
sFONT* glcd_get_font(void);
/**************************************************************************************************************
 * 函数名：glcd_draw_hline()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Length 起点X和Y坐标及长度
 * 输出  ：void
 * 描述  ：画水平线
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_hline(uint16_t Xpos, uint16_t Ypos, uint16_t Length);
/**************************************************************************************************************
 * 函数名：glcd_draw_vline()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Length 起点X和Y坐标及长度
 * 输出  ：void
 * 描述  ：画垂直线
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_vline(uint16_t Xpos, uint16_t Ypos, uint16_t Length);
/**************************************************************************************************************
 * 函数名：glcd_draw_rect()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint8_t Height 矩形左上角点的坐标及宽和高
 * 输出  ：void
 * 描述  ：画矩形函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_rect(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint8_t Height);
/**************************************************************************************************************
 * 函数名：glcd_draw_circle()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Radius 圆心坐标点及半径
 * 输出  ：void
 * 描述  ：画圆函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_circle(uint16_t Xpos, uint16_t Ypos, uint16_t Radius);
/**************************************************************************************************************
 * 函数名：glcd_draw_monobmp()
 * 输入  ：const uint32_t *Pict 画一个全屏单色的取膜数据
 * 输出  ：void
 * 描述  ：画一个单色的全屏图片函数
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_monobmp(const uint32_t *Pict);
/**************************************************************************************************************
 * 函数名：glcd_fill_rect()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height 填充矩形左上角点、宽和高
 * 输出  ：void
 * 描述  ：画一个填充的矩形
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_fill_rect(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height);
/**************************************************************************************************************
 * 函数名：glcd_fill_circle()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Radius 填充圆的圆心和半径
 * 输出  ：void
 * 描述  ：画一个填充圆
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_fill_circle(uint16_t Xpos, uint16_t Ypos, uint16_t Radius);
/**************************************************************************************************************
 * 函数名：glcd_draw_uniline()
 * 输入  ：uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2 起始点坐标和终点坐标
 * 输出  ：void
 * 描述  ：画任意方向的直线
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_uniline(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2);
/**************************************************************************************************************
 * 函数名：glcd_draw_pixel()
 * 输入  ：int16_t x, int16_t y  点的坐标
 * 输出  ：void
 * 描述  ：画一个象素点
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_pixel(uint16_t x, uint16_t y);
/**************************************************************************************************************
 * 函数名：glcd_draw_char()
 * 输入  ：const uint16_t *c   字符编码
 * 输出  ：void
 * 描述  ：LCD画一个字符
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_char(uint16_t Xpos, uint16_t Ypos, const uint16_t *c);
/**************************************************************************************************************
 * 函数名：glcd_display_char()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint8_t Ascii 显示的位置和字符
 * 输出  ：void
 * 描述  ：LCD显示一个字符
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_display_char(uint16_t Xpos, uint16_t Ypos, uint8_t Ascii);
/**************************************************************************************************************
 * 函数名：glcd_draw_string()
 * 输入  ：u16 xpos, u16 ypos, u8 *ptr 显示的位置和字符串
 * 输出  ：void
 * 描述  ：LCD显示一串字符
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void glcd_draw_string(uint16_t xpos, uint16_t ypos, uint8_t *ptr);
/**************************************************************************************************************
 * 函数名：glcd_draw_num()
 * 输入  ：u16 x, u16 y, s32 num, u8 len   显示的位置，数字及长度
 * 输出  ：void
 * 描述  ：LCD显示一个数字
 * 调用  ：外部调用        
 *****************************************************************************************************************/	 
void glcd_draw_num(uint16_t x, uint16_t y, int32_t num, uint8_t len);
/**************************************************************************************************************
 * 函数名：glcd_clear_aera()
 * 输入  ：uint16_t x,uint16_t y,uint16_t w,uint16_t h   清除的位置，长度和宽度
 * 输出  ：void
 * 描述  ：LCD清除某个区域
 * 调用  ：外部调用        
 *****************************************************************************************************************/	
void glcd_clear_aera(uint16_t x,uint16_t y,uint16_t w,uint16_t h);
void glcd_debug(char* fmt, ...);
#endif /*__GLCD_H*/
